{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Environment-NetworkAcls Template. This adds NetworkAcls to an existing Environment VPC within an Environment Account. This Template is optional, and can be added (or removed) at any time to apply an additional layer of network security. This initially simply replicates the Default NetworkAcl, so we have a Template from which we can iterate to tighten security.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [ "EnvironmentVPCStackName" ]
        },
        {
          "Label" : { "default" : "VPC Configuration" },
          "Parameters" : [ "EnvironmentName", "EnvironmentMultiZoneSubnets" ]
        }
      ],

      "ParameterLabels" : {
        "EnvironmentVPCStackName" : { "default" : "Environment VPC Stack Name" },
        "EnvironmentName" : { "default" : "Environment Name" },
        "EnvironmentMultiZoneSubnets" : { "default" : "Environment Multi-Zone Subnets" }
      }
    }
  },

  "Parameters" : {
    "EnvironmentVPCStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Environment VPC.",
      "Type" : "String",
      "MinLength" : 8,
      "MaxLength" : 64,
      "Default" : "Production-VPC",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain upper and lower case letters and numbers, or a hyphen."
    },

    "EnvironmentName" : {
      "Description" : "Name of the Environment associated with the Stack.",
      "Type" : "String",
      "Default" : "Production",
      "AllowedValues" : [ "Production", "Staging", "QA", "Development" ],
      "ConstraintDescription" : "must be one of the following: Production, Staging, QA, Development."
    },

    "EnvironmentMultiZoneSubnets" : {
      "Description" : "Use Subnets in multiple Availability Zones",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    }
  },

  "Conditions" : {
    "UseMultiZoneSubnets" : { "Fn::Equals" : [ { "Ref" : "EnvironmentMultiZoneSubnets" }, "true" ]}
  },

  "Resources" : {
    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-VPC" } },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${EnvironmentName}-PublicNetworkAcl" } }
        ]
      }
    },

    "PublicNetworkAclEntryInbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "PublicNetworkAclEntryOutbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "PublicSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-PublicSubnetA" } },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PublicSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-PublicSubnetB" } },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "WebSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-WebSubnetA" } },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "WebSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-WebSubnetB" } },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "PrivateNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-VPC" } },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${EnvironmentName}-PrivateNetworkAcl" } }
        ]
      }
    },

    "PrivateNetworkAclEntryInbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "PrivateNetworkAclEntryOutbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "ApplicationSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-ApplicationSubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "ApplicationSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-ApplicationSubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "DatabaseSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-DatabaseSubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "DatabaseSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-DatabaseSubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "QueueSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-QueueSubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "QueueSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-QueueSubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "IdentitySubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-IdentitySubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "IdentitySubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${EnvironmentVPCStackName}-IdentitySubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    }
  }
}
