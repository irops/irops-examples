{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Build-NetworkAcls Template. This adds NetworkAcls to an existing Build VPC within the Build Account. This Template is optional, and can be added (or removed) at any time to apply an additional layer of network security. This initially simply replicates the Default NetworkAcl, so we have a Template from which we can iterate to tighten security.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [ "BuildVPCStackName" ]
        }
      ],

      "ParameterLabels" : {
        "BuildVPCStackName" : { "default" : "Build VPC Stack Name" }
      }
    }
  },

  "Parameters" : {
    "BuildVPCStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Build VPC.",
      "Type" : "String",
      "MinLength" : 8,
      "MaxLength" : 64,
      "Default" : "Build-VPC",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain upper and lower case letters and numbers, or a hyphen."
    }
  },

  "Resources" : {
    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-VPC" }},
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "Build-PublicNetworkAcl" }}
        ]
      }
    },

    "PublicNetworkAclEntryInbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "PublicNetworkAclEntryOutbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "PublicSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-PublicSubnetA" }},
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PublicSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-PublicSubnetB" }},
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "WebSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-WebSubnetA" }},
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "WebSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-WebSubnetB" }},
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PrivateNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-VPC" }},
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "Build-PrivateNetworkAcl" }}
        ]
      }
    },

    "PrivateNetworkAclEntryInbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "PrivateNetworkAclEntryOutbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "ApplicationSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-ApplicationSubnetA" }},
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "ApplicationSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-ApplicationSubnetB" }},
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "DatabaseSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-DatabaseSubnetA" }},
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "DatabaseSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-DatabaseSubnetB" }},
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "BuildSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-BuildSubnetA" }},
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "BuildSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : { "Fn::Sub" : "${BuildVPCStackName}-BuildSubnetB" }},
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    }
  }
}
