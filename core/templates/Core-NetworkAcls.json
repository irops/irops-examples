{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Core-NetworkAcls Template. This adds NetworkAcls to an existing Core VPC within the Core Account. This Template is optional, and can be added (or removed) at any time to apply an additional layer of network security. This initially simply replicates the Default NetworkAcl, so we have a Template from which we can iterate to tighten security.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [ "CoreVPCStackName" ]
        },
        {
          "Label" : { "default" : "VPC Configuration" },
          "Parameters" : [ "CoreMultiZoneSubnets" ]
        }
      ],

      "ParameterLabels" : {
        "CoreVPCStackName" : { "default" : "Core VPC Stack Name" },
        "CoreMultiZoneSubnets" : { "default" : "Core Multi-Zone Subnets" }
      }
    }
  },

  "Parameters" : {
    "CoreVPCStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Core VPC.",
      "Type" : "String",
      "MinLength" : 8,
      "MaxLength" : 64,
      "Default" : "Core-VPC",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain upper and lower case letters and numbers, or a hyphen."
    },

    "CoreMultiZoneSubnets" : {
      "Description" : "Use Subnets in multiple Availability Zones",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    }
  },

  "Conditions" : {
    "UseMultiZoneSubnets" : { "Fn::Equals" : [ { "Ref" : "CoreMultiZoneSubnets" }, "true" ]}
  },

  "Resources" : {
    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-VPC" } },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "Core-PublicNetworkAcl" } }
        ]
      }
    },

    "PublicNetworkAclEntryInbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "PublicNetworkAclEntryOutbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "PublicSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-PublicSubnetA" } },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PublicSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-PublicSubnetB" } },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "WebSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-WebSubnetA" } },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "WebSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-WebSubnetB" } },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "PrivateNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-VPC" } },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "Core-PrivateNetworkAcl" } }
        ]
      }
    },

    "PrivateNetworkAclEntryInbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "PrivateNetworkAclEntryOutbound100" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "RuleAction" : "allow"
      }
    },

    "ApplicationSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-ApplicationSubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "ApplicationSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-ApplicationSubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "DatabaseSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-DatabaseSubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "DatabaseSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-DatabaseSubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "ProductionQueueSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-ProductionQueueSubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "ProductionQueueSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-ProductionQueueSubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "StagingQueueSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-StagingQueueSubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "StagingQueueSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-StagingQueueSubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "QAQueueSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-QAQueueSubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "QAQueueSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-QAQueueSubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    },

    "DevelopmentQueueSubnetANetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-DevelopmentQueueSubnetA" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "DevelopmentQueueSubnetBNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Fn::ImportValue" : {"Fn::Sub": "${CoreVPCStackName}-DevelopmentQueueSubnetB" } },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      },
      "Condition" : "UseMultiZoneSubnets"
    }
  }
}
